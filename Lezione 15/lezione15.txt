COSA SONO I COSTRUTTORI?

Un costruttore è un metodo speciale che ha:

    Lo stesso nome della classe

    Nessun tipo di ritorno (neanche void)

    Viene eseguito automaticamente alla creazione di un oggetto.

✅ Scopi principali:

    Inizializzare automaticamente variabili della classe.

    Eseguire codice al momento della creazione dell’oggetto.

📌 TIPI DI COSTRUTTORI

    Costruttore di default (senza parametri):

class Studente {
public:
    Studente() {
        cout << "Oggetto creato!\n";
    }
};

    Costruttore parametrico (con parametri):

class Studente {
public:
    string nome;
    int eta;

    Studente(string n, int e) {
        nome = n;
        eta = e;
    }
};

    Costruttore di copia:
    Serve per creare una copia di un oggetto:

class Studente {
public:
    string nome;
    Studente(const Studente& s) {
        nome = s.nome;
    }
};

🗑️ COSA SONO I DISTRUTTORI?

Il distruttore è un metodo speciale:

    Ha lo stesso nome della classe ma preceduto da ~ (tilde).

    Non prende parametri e non restituisce nulla.

    Viene chiamato automaticamente quando l’oggetto esce dallo scope o viene distrutto.

Serve principalmente per:

    Liberare risorse (memoria, file, connessioni, ecc.)

    Mostrare messaggi di uscita/debug

class Studente {
public:
    ~Studente() {
        cout << "Oggetto distrutto!\n";
    }
};

⚠️ ORDINE DI ESECUZIONE

Studente s1("Luca", 25);
// --> viene chiamato il costruttore

// quando s1 esce dallo scope (es. fine main)
// --> viene chiamato automaticamente il distruttore

🧪 VANTAGGI PRATICI

    Inizializzare subito gli oggetti al momento della loro creazione.

    Avere classi più robuste e modulari.

    Usare costruttori diversi per creare oggetti in situazioni diverse.

    Automatizzare la pulizia delle risorse con i distruttori.

