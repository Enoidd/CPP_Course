
INCAPSULAMENTO

L'incapsulamento è il principio secondo cui gli attributi (che fanno parte delle classi) interni ad un oggetto non devono essere accessibili dall'esterno.
L'accesso avviene invece tramite metodi pubblici (getter/setter), che controllano come e quando i dati possono essere letti o modificati.

MODIFICATORI DI ACCESSO DELLE classi

- private : Accessibile solo all'interno della classe
- public : Accessibile da ovunque (dentro o fuori dalla classe)
- protected : Accessibile solo dalla classe e dalle sue sottoclassi (vedi ereditarietà)

PERCHE' E' UTILE L'INCAPSULAMENTO:

1. PROTEZIONE DEI DATI: eviti modifiche accidentali
2. CONTROLLO DEGLI ACCESSI: puoi stabilire regole (età > 0)
3. INTERFACCIA PULITA: separi come un dato è usato da come è salvato
4. MANUTENZIONE FACILITATA: puoi cambiare l'implementazione interna senza rompere il codice esterno

COME SI APPLICA L'INCAPSULAMENTO:

class Persona{
    private: // NON SONO ACCESSIBILI DAL MAIN
        string nome;
        int eta;

    public:  // ACCEDIBILI DAL MAIN - Interfaccia per usare/modificare in sicurezza
        void setNome(string nuovoNome){
            nome = nuovoNome;
        }

        string getNome(){
            return nome;
        }

        void setEta(int nuovaEta){
            if(nuovaEta >= 0)
                eta = nuovaEta;
        }

        int getEta(){
            return eta;
        }
}

